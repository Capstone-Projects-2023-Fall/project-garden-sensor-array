"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8226],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),o=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(m.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},N=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=o(a),N=r,c=u["".concat(m,".").concat(N)]||u[N]||k[N]||l;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=N;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},2718:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:1,description:"Descriptions of the backend classes, data-fields, and methods."},i="Backend API",p={unversionedId:"api-specification/backend-api",id:"api-specification/backend-api",title:"Backend API",description:"Descriptions of the backend classes, data-fields, and methods.",source:"@site/docs/api-specification/backend-api.md",sourceDirName:"api-specification",slug:"/api-specification/backend-api",permalink:"/project-garden-sensor-array/docs/api-specification/backend-api",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-garden-sensor-array/edit/main/documentation/docs/api-specification/backend-api.md",tags:[],version:"current",lastUpdatedBy:"roda33",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Descriptions of the backend classes, data-fields, and methods."},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-garden-sensor-array/docs/category/api-specification"},next:{title:"Design Document - Part II API",permalink:"/project-garden-sensor-array/docs/api-specification/design-api-intro"}},m={},o=[{value:"Gardener Class",id:"gardener-class",level:2},{value:"Account Class",id:"account-class",level:2},{value:"AccountLog Class",id:"accountlog-class",level:2},{value:"AccountSettings Class",id:"accountsettings-class",level:2},{value:"Garden Class",id:"garden-class",level:2}],s={toc:o};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backend-api"},"Backend API"),(0,r.kt)("h2",{id:"gardener-class"},"Gardener Class"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Class Purpose:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Represents the people that wish to register for Garden Sensor Array to monitor their plants through the website via sensors")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data Fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String"),"   -- Username needed to log in"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"email: String"),"  --  A valid email is needed to register")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Constructor(name:String(), email:String())")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," A constructor function added to the Gardener class to create more instances as more people will likely join GSA.")))),(0,r.kt)("h2",{id:"account-class"},"Account Class"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Class Purpose:"),"  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Holds all information about an account stored in the Database")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data Fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String()"),"  --  username needed to log in"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"password: String()"),"  --  password is needed to log in"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"name: String()"),"  --  name of the user "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"email: String()"),"  --  a valid email is needed to register/log in"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"sensor_id: int"),"  --  sensor id specific to an account id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"account_id: int"),"  --  unique id to easily identify different account/security reasons as well")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Constructor(username: String()\npassword: int\nname: String()\nemail: String()\nsensor_id: int\naccount_id: int)")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," A constructor function added to Account class to create more instances as more accounts will be made in result of more people joining the GSA website"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getUsername()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setUsername()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," Get and set functions for the username"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getPassword() ")," ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setPassword()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," Get and set functions for the password"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getName()"),"   ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setName()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," Get and set functions for the name"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getEmail()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setEmail()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," Get and set functions for the email"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getSensorId()"),"   ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setSensorId()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," Get and set functions for the sensor id"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getAccountId()"),"   ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"setAccountId()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," Get and set functions for the account id")))),(0,r.kt)("h2",{id:"accountlog-class"},"AccountLog Class"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Class Purpose:"),"  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Handles Account creation, log in, and log off")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data Fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String()"),"  --  needed to log in"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"password: String()"),"  --  needed to log in"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"email: String()")," --  needed to register/make account"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"name: String()"),"  --  needed to identify the user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"account_id: int"),"  --  unique id for each account created")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"createAccount()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Create an account with the following information and store it in the database to be used for verification, to get, etc")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Pre condition:")," Valid Email")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String()"),"   --  log in username"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"password: String()"),"   --  log in password"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"name: String()"),"    --  name of user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"account_id: int"),"    --  unique id for ease of identification"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," None (or a message saying Sign Up has been completed)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointerException"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"signIn()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Registered users are able to log in with their username and password")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Pre Condition:")," Account is made and in the database")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")," "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String()"),"   --  log in username"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"password: String()"),"   --  log in password"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," None (user is taken to dashboard)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointException")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"signOut()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Registered users are able to log out of their account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Pre Condition:")," Account is made, stored in the database, and is currently logged out")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")," "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"None"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," None (user is logged off and sent to the sign in screen)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointException"))))),(0,r.kt)("h2",{id:"accountsettings-class"},"AccountSettings Class"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Class Purpose:")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Handles Account settings, in an event where the user wants to change their credentials")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data Fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String()"),"   --  changeable username"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"password: String()"),"  --  changeable password"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"name: String()"),"  --  changeable name")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"changeUsername()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Change Username of Account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Pre Condition:")," An Existing Account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"username: String()")," -- username needed for it to be changed"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," None")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointerException")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"changePassword()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Change password of Account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Pre Condition:")," An Existing Account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"password: String()"),"  -- password needed for it to be changed"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," None")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointerException")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"changeName()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Change name of Account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Pre Condition:")," An Existing Account")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"name: String()")," -- name needed for it to be changed"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," None")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointerException"))))),(0,r.kt)("h2",{id:"garden-class"},"Garden Class"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Class Purpose:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Stores all information gathered from sensors and be able to send information out to the GSA website")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data Fields:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"sensor_id: int"),"    --   a unique id for every sensor available"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"garden_name: String()"),"  --  a name for the sensor"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"account_id: int"),"   --  a unique id for every account"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"soil_moisture: int"),"    --   soil moisture level gathered by the sensors "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"temp: int"),"   --   ambient temperature gathered by the sensors"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"light_level: int"),"  --  sunlight levels gathered by the sensors")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Constructor(sensor_id: int, garden_name: String())"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Method Purpose:")," A constructor added to the class as more sensors can possibly be added to a single Account ")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"fetch()")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Method Purpose:")," Requests Sensor data from the database")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Url: String()"),"   --  A URL provided to requests data from"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Return Values:")," Promise")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Exceptions Thrown:")," NullPointerException"))))))}u.isMDXComponent=!0}}]);