"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),g=l(n),h=s,p=g["".concat(c,".").concat(h)]||g[h]||u[h]||r;return n?a.createElement(p,o(o({ref:t},d),{},{components:n})):a.createElement(p,o({ref:t},d))}));function p(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[g]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},76126:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={sidebar_position:2},o="Use Case Diagrams",i={unversionedId:"system-architecture/sequence_diagrams",id:"system-architecture/sequence_diagrams",title:"Use Case Diagrams",description:"Use Case 1: Browsing Plant Data",source:"@site/docs/system-architecture/sequence_diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence_diagrams",permalink:"/project-garden-sensor-array/docs/system-architecture/sequence_diagrams",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-garden-sensor-array/edit/main/documentation/docs/system-architecture/sequence_diagrams.md",tags:[],version:"current",lastUpdatedBy:"Ian Tyler Applebaum",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"design",permalink:"/project-garden-sensor-array/docs/system-architecture/design"},next:{title:"Class Diagrams",permalink:"/project-garden-sensor-array/docs/system-architecture/class_diagrams"}},c={},l=[{value:"Use Case #1: Browsing Plant Data",id:"use-case-1-browsing-plant-data",level:2},{value:"Use Case #2: Monitoring Long Term Plant Growth",id:"use-case-2-monitoring-long-term-plant-growth",level:2},{value:"Use Case #3: Accessing Sensor Data in Person",id:"use-case-3-accessing-sensor-data-in-person",level:2},{value:"Use Case #4,5,6 : Monitoring Soil Moisture, Light Levels, Temperature",id:"use-case-456--monitoring-soil-moisture-light-levels-temperature",level:2},{value:"Use Case #7: Adding Additional Sensor Clusters",id:"use-case-7-adding-additional-sensor-clusters",level:2},{value:"Use Case #8: Resetting Password",id:"use-case-8-resetting-password",level:2}],d={toc:l};function g(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"use-case-diagrams"},"Use Case Diagrams"),(0,s.kt)("h2",{id:"use-case-1-browsing-plant-data"},"Use Case #1: Browsing Plant Data"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n    Actor User\n\n    User --\x3e>+ GSA Website: clicks "Plant Data" dropdown list\n    GSA Website->>+Plant Database: requests for Plant Information\n   \n    Plant Database--\x3e>-GSA Website: sends Plant Information\n    \n    GSA Website->>-Plant Data (Dropdown List): Updates Plant Data Dropdown List according to Database\n    activate GSA Website\n    activate Plant Data (Dropdown List)\n    Plant Data (Dropdown List)--\x3e>-User: Plant Data Dropdown List is shown to the User after update\n    \n    '}),(0,s.kt)("p",null,'In an event where the user wants to browse through their Plant data, they can do so by using Garden Sensor Array\'s dedicated website. In the GSA Website, the user will be given the option to press the "Plant Data" button. By selecting this button, the GSA Website will then request for the current Plant information stored within the Plant Databse. The Plant Database, upon receiving the request, will send out the current Plant information collected from the sensors to the GSA Website. The website will then take this information and update the Plant Data Dropdown list with its corresponding data field. Once the update has been completed, the newly updated Plant Data Dropdown list will be shown to the user for viewing within the GSA Website.'),(0,s.kt)("h2",{id:"use-case-2-monitoring-long-term-plant-growth"},"Use Case #2: Monitoring Long Term Plant Growth"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n    Actor User\n    participant GSA Home Page\n    participant Login Page\n    participant Database \n    participant My Sensors Page \n    participant Specific Sensor Page\n\n    User->>+GSA Home Page: Accesses Website \n    activate GSA Home Page\n    GSA Home Page->>+Login Page: Clicks login button\n    Login Page--\x3e>User: Login prompt\n    User->>Login Page: Enters login info \n    Login Page->>+Database: Sends info entered \n    deactivate Login Page \n    Database--\x3e>Database: Verifies login info\n    Database--\x3e>GSA Home Page: Succesfully logged in\n    GSA Home Page--\x3e>User: Return\n    deactivate GSA Home Page\n    User->>+My Sensors Page: Clicks My Sensors Tab\n    My Sensors Page--\x3e>User: Prompts to choose specific sensor\n\n    deactivate My Sensors Page\n    User->>+Specific Sensor Page: Chooses sensor they want to know about\n    Specific Sensor Page--\x3e>User: Return\n    User->>Specific Sensor Page: Clicks "Show History"\n    Specific Sensor Page--\x3e>Database: Requests all recorded data \n    Database->>Specific Sensor Page: Sends data\n    deactivate Database \n    Specific Sensor Page--\x3e>User: Return\n\n    deactivate Specific Sensor Page\n    User--\x3e>User: Looking for trends in plant/sensor history\n'}),(0,s.kt)("p",null,'Not only does the Garden Sensor Array allow for users to get real-time information about thier plant, but it also allows for users to check previously recorded data as well. This becomes useful in events where the user wants to find trends or patterns in their plant\'s history, epspecially if the plant in question is growing much slower than expected. The User can go to the GSA website and login. Once the credentials that were entered in by the user are verifed with the database, the user will be succesfully logged in. Now, they can select the "My Sensors Tab" located at the top of the page. At this point the user will be presented with all the sensor units they have connected and can pick the one they specifically want to know more about. When the specifc sensor is chosen, the user will be redirected to that specific sensor\'s page. Here, the user will have the option to view all the sensor\'s recorded data by clicking "Show History". This button requests all the appropriate data from the database; and once returned, the page will be able to show the full recorded history that the sensor took of the plant. The user will be able to check for any trends to solve the growth problem.'),(0,s.kt)("h2",{id:"use-case-3-accessing-sensor-data-in-person"},"Use Case #3: Accessing Sensor Data in Person"),(0,s.kt)("mermaid",{value:"sequenceDiagram\n\n    title Accessing Sensor Data\n\n    actor user\n    participant plant\n    participant SCU\n    participant GSA Database\n    participant GSA Website\n\nactivate plant\n\n\nuser --\x3e plant: Waters\n\nplant --\x3e+ SCU: Reads condition\n\nSCU --\x3e SCU: Toggles LED on/off\n\nSCU --)+ GSA Database: Writes Data\ndeactivate SCU\n\nuser --\x3e SCU: Observes\n\nGSA Database --)+ GSA Website: Updates\ndeactivate GSA Database\n\ndeactivate plant\n"}),(0,s.kt)("p",null,"It isn't always convinient for a user to access their devices while in their garden so, for convenience, the sensor cluster unit is equipped with a LED that changes state based on measured data. When sensor data is read, the unit will decide whether or not to update the LED, and the user need only to look upon its visage to determine whether sufficient gardening has been done. "),(0,s.kt)("h2",{id:"use-case-456--monitoring-soil-moisture-light-levels-temperature"},"Use Case #4,5,6 : Monitoring Soil Moisture, Light Levels, Temperature"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n    Actor User\n    participant GSA Home Page\n    participant Login Page\n    participant Database \n    participant My Sensors Page \n    participant Specific Sensor Page\n\n    User->>+GSA Home Page: Accesses Website \n    activate GSA Home Page\n    GSA Home Page->>+Login Page: Clicks login button\n    Login Page--\x3e>User: Login prompt\n    User->>Login Page: Enters login info \n    Login Page->>+Database: Sends info entered \n    deactivate Login Page \n    Database--\x3e>Database: Verifies login info\n    Database--\x3e>GSA Home Page: Succesfully logged in\n    GSA Home Page--\x3e>User: Return\n    deactivate GSA Home Page\n    activate My Sensors Page\n    User->>+My Sensors Page: Clicks My Sensors Tab\n    My Sensors Page--\x3e>User: Prompts to choose specific sensor\n\n    deactivate My Sensors Page\n    User->>+Specific Sensor Page: Chooses sensor they want to know about\n    Specific Sensor Page--\x3e>User: Return\n    User->>Specific Sensor Page: Clicks "Show Daily Recap or Show Weekly Recap"\n    Specific Sensor Page--\x3e>Database: Requests last hours/ last weeks data \n    Database->>Specific Sensor Page: Sends data\n    deactivate Database \n    Specific Sensor Page--\x3e>User: Return\n\n    deactivate Specific Sensor Page\n    User--\x3e>User: Looking for current light levels, soil moisture, and temperature. \n'}),(0,s.kt)("p",null,"The gardener seeks for their daily or weekly data on their sensors page. The database mantains three averages. The weekly, daily, or hourly average of their sensor's readings of light levels, soil moisture, or temperature. Once the gardener reaches the site's page on their sensors, the home page of that sensor will display one of the requested averages from the user in a drop down menu underneath that sensors readings. On default the home page of the sensor will display the daily monitoring. If the user wishes to be able to see the levels locally at the sensor, the sensor will display on their metric otherwise a green or red LED on the sensors status. The threshold of whether its red or green can be set by the user under sensor settings page. "),(0,s.kt)("h2",{id:"use-case-7-adding-additional-sensor-clusters"},"Use Case #7: Adding Additional Sensor Clusters"),(0,s.kt)("mermaid",{value:'sequenceDiagram\n\n    User --)+ Web API: clicks "Add New Sensor"\n    Web API->>+Hub: Request nearby BT devices\n\n    Hub->>+Sensor Control Unit 1: lookup_name()\n    Sensor Control Unit 1 --\x3e>-Hub: Returns device name\n    Hub->>+Sensor Control Unit 2: lookup_name()\n    Sensor Control Unit 2 --\x3e>-Hub: Returns device name\n\n    Hub--\x3e>-Web API: list_bt_devices()\n    Web API--\x3e>-User: Displays nearby BT device names\n\n    User--)Web API: Selects "Sensor 1" from list\n    Web API->>+Hub: Sends "Sensor 1"\n    Hub ->>+ Sensor Control Unit 1: connect()\n    Sensor Control Unit 1 --\x3e>-Hub: confirm_connect()\n\n    Hub--\x3e>-Web API: Confirm Sensor 1 connection\n    Web API--\x3e>User: "Sensor 1 Connected Successfully!"'}),(0,s.kt)("p",null,'When users want to monitor a new plant or garden, they can do so by pairing a new sensor control unit to one of their hubs.\nTo start, they can select "add new sensors" on the web app that will send a request to the hub to begin sending requests to\nall nearby Bluetooth devices to ask for their names. After recieving a list of all nearby devices, the hub will return that\nlist to the web app that will then prompt the user to select the sensor contol unit they wish to add. The web app then returns\nthe users selection to the hub that will then initiate a connection with the respective sensor control unit. Upon successful\nconnection, the hub returns that the connection was sucessful and the web app will display "Sensor 1 Connected Successfully!"'),(0,s.kt)("h2",{id:"use-case-8-resetting-password"},"Use Case #8: Resetting Password"),(0,s.kt)("mermaid",{value:'\nsequenceDiagram\n\n    Actor User\n\n    User->>+Login Page: Navigates to GSA Login Page\n\n    activate Login Page\n\n    Login Page --\x3e> User: Login Prompt\n    User ->> Login Page: Selects "Trouble Logging in?" button\n    Login Page --\x3e>+ Account Recovery Page: Redirects to\n\n    Account Recovery Page ->> User: Prompts for Recovery Credentials\n    User --\x3e> Account Recovery Page: Enters Credentials\n    Account Recovery Page ->>+ User Database: Relays Credentials\n\n    User Database --\x3e> User Database: Validates Credentials\n    User Database --\x3e> Account Recovery Page: Confirms Identity\n    Account Recovery Page --\x3e>+ Password Change Page: Redirects to\n\n    deactivate Account Recovery Page\n\n    Password Change Page ->> User: Prompts for new Password\n    User --\x3e> Password Change Page: Enters New Password\n    Password Change Page --\x3e> User Database: Updates User Password\n    User Database --) Password Change Page: Confirms Update\n    deactivate User Database\n    Password Change Page --\x3e> User: Confirmation Message\n\n    Password Change Page --\x3e>- Login Page: Redirects to\n    Login Page --\x3e> User: Login Prompt\n\n    User ->> Login Page: Enters Credentials\n    Login Page --\x3e>- Account Page: Redirects to'}),(0,s.kt)("p",null,'If the user finds themselves in a position where they need to reset their password, they are able to do so by navigating to the login page, and selecting the "Trouble Loggin In?" button. This will redirect them to an account recovery page, which prompts them to enter their recovery credentials (Email and secret questioon). After the user enters their credentials, they will be checked against the information stored in the user database. Upon confirmation, the user will be redirected to a page which prompts for an updated password. Once the new password is entered, it is updated in the user database, and the user is again redirected to the login page. Here, the user is able to enter their newly reestablished credentials, and log in, taking them to the account page.'))}g.isMDXComponent=!0}}]);