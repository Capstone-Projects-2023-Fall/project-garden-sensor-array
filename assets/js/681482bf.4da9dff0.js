"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(n),g=r,p=u["".concat(c,".").concat(g)]||u[g]||h[g]||s;return n?a.createElement(p,o(o({ref:t},d),{},{components:n})):a.createElement(p,o({ref:t},d))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},76126:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const s={sidebar_position:2},o="Use Case Diagrams",i={unversionedId:"system-architecture/sequence_diagrams",id:"system-architecture/sequence_diagrams",title:"Use Case Diagrams",description:"Use Case 1: Browsing Plant Data",source:"@site/docs/system-architecture/sequence_diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence_diagrams",permalink:"/project-garden-sensor-array/docs/system-architecture/sequence_diagrams",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-garden-sensor-array/edit/main/documentation/docs/system-architecture/sequence_diagrams.md",tags:[],version:"current",lastUpdatedBy:"Giorgio Tatarelli",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"design",permalink:"/project-garden-sensor-array/docs/system-architecture/design"},next:{title:"Class Diagrams",permalink:"/project-garden-sensor-array/docs/system-architecture/class_diagrams"}},c={},l=[{value:"Use Case #1: Browsing Plant Data",id:"use-case-1-browsing-plant-data",level:2},{value:"Use Case #4: Monitoring Garden Conditions",id:"use-case-4-monitoring-garden-conditions",level:2},{value:"Use Case #7: Adding Additional Sensor Clusters",id:"use-case-7-adding-additional-sensor-clusters",level:2},{value:"Use Case #8: Resetting Password",id:"use-case-8-resetting-password",level:2}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-case-diagrams"},"Use Case Diagrams"),(0,r.kt)("h2",{id:"use-case-1-browsing-plant-data"},"Use Case #1: Browsing Plant Data"),(0,r.kt)("mermaid",{value:'sequenceDiagram\n    Actor User\n\n    User --\x3e>+ GSA Website: clicks "Plant Data" dropdown list\n    GSA Website->>+Plant Database: requests for Plant Information\n   \n    Plant Database--\x3e>-GSA Website: sends Plant Information\n    \n    GSA Website->>-Plant Data (Dropdown List): Updates Plant Data Dropdown List according to Database\n    activate GSA Website\n    activate Plant Data (Dropdown List)\n    Plant Data (Dropdown List)--\x3e>-User: Plant Data Dropdown List is shown to the User after update\n    \n    '}),(0,r.kt)("p",null,'In an event where the user wants to browse through their Plant data, they can do so by using Garden Sensor Array\'s dedicated website. In the GSA Website, the user will be given the option to press the "Plant Data" button. By selecting this button, the GSA Website will then request for the current Plant information stored within the Plant Databse. The Plant Database, upon receiving the request, will send out the current Plant information collected from the sensors to the GSA Website. The website will then take this information and update the Plant Data Dropdown list with its corresponding data field. Once the update has been completed, the newly updated Plant Data Dropdown list will be shown to the user for viewing within the GSA Website.'),(0,r.kt)("h2",{id:"use-case-4-monitoring-garden-conditions"},"Use Case #4: Monitoring Garden Conditions"),(0,r.kt)("mermaid",{value:"sequenceDiagram\n    title Reading Sensor Data From GSA Website\n\n    actor user\n    participant GSA Website\n    participant GSA Database\n\n    activate user\n    user->>GSA Website: Enter Credentials\n    activate GSA Website\n\n    GSA Website--\x3e>user: Log in Status\n\n    alt Log in Sucess\n        \n        GSA Website->>GSA Database: Fetch User Garden Information\n        activate GSA Database\n        GSA Database--\x3e>GSA Website: User Plant Data\n        deactivate GSA Database\n\n        GSA Website->>user: Redirect to User Garden Information Page\n        user->>GSA Website: Get Sensor Data from Specified Sensor Module\n        GSA Website--\x3e>user: Display Sensor Data for Plants Around Specified Sensor Module\n\n        user->>user: Know What to do for Plants\n        \n    else Bad Credentials Supplied\n        GSA Website->>user: Log in Failure\n    end\n\n    deactivate user\n    deactivate GSA Website\n"}),(0,r.kt)("p",null,"If the user is unable to physically access their garden (maybe they are at work of on vacation) they will want to check the conditions in their garden so they can know what they need to do when they get home or what to tell the person caring for their garden. First, the user will log into the GSA website with their user credentials. If the log in succeeds, the website will fetch the relevant data from a database so that it is ready to be displayed for the user, then redirect them to the page where they can access their garden information. If the log in fails, the user will simply be met with a log in failure message. Assuming the log in succeeded, The user will select the sensor module(s) that they want to read data from and it will be displayed on the webpage. From this, the user will know the conditions of the plants located around each sensor module and can figure out what steps they would like to take to care for their garden."),(0,r.kt)("h2",{id:"use-case-7-adding-additional-sensor-clusters"},"Use Case #7: Adding Additional Sensor Clusters"),(0,r.kt)("mermaid",{value:'sequenceDiagram\n\n    User --)+ Web API: clicks "Add New Sensor"\n    Web API->>+Hub: Request nearby BT devices\n\n    Hub->>+Sensor Control Unit 1: lookup_name()\n    Sensor Control Unit 1 --\x3e>-Hub: Returns device name\n    Hub->>+Sensor Control Unit 2: lookup_name()\n    Sensor Control Unit 2 --\x3e>-Hub: Returns device name\n\n    Hub--\x3e>-Web API: list_bt_devices()\n    Web API--\x3e>-User: Displays nearby BT device names\n\n    User--)Web API: Selects "Sensor 1" from list\n    Web API->>+Hub: Sends "Sensor 1"\n    Hub ->>+ Sensor Control Unit 1: connect()\n    Sensor Control Unit 1 --\x3e>-Hub: confirm_connect()\n\n    Hub--\x3e>-Web API: Confirm Sensor 1 connection\n    Web API--\x3e>User: "Sensor 1 Connected Successfully!"'}),(0,r.kt)("p",null,'When users want to monitor a new plant or garden, they can do so by pairing a new sensor control unit to one of their hubs.\nTo start, they can select "add new sensors" on the web app that will send a request to the hub to begin sending requests to\nall nearby Bluetooth devices to ask for their names. After recieving a list of all nearby devices, the hub will return that\nlist to the web app that will then prompt the user to select the sensor contol unit they wish to add. The web app then returns\nthe users selection to the hub that will then initiate a connection with the respective sensor control unit. Upon successful\nconnection, the hub returns that the connection was sucessful and the web app will display "Sensor 1 Connected Successfully!"'),(0,r.kt)("h2",{id:"use-case-8-resetting-password"},"Use Case #8: Resetting Password"),(0,r.kt)("mermaid",{value:'\nsequenceDiagram\n\n    Actor User\n\n    User->>+Login Page: Navigates to GSA Login Page\n\n    activate Login Page\n\n    Login Page --\x3e> User: Login Prompt\n    User ->> Login Page: Selects "Trouble Logging in?" button\n    Login Page --\x3e>+ Account Recovery Page: Redirects to\n\n    Account Recovery Page ->> User: Prompts for Recovery Credentials\n    User --\x3e> Account Recovery Page: Enters Credentials\n    Account Recovery Page ->>+ User Database: Relays Credentials\n\n    User Database --\x3e> User Database: Validates Credentials\n    User Database --\x3e> Account Recovery Page: Confirms Identity\n    Account Recovery Page --\x3e>+ Password Change Page: Redirects to\n\n    deactivate Account Recovery Page\n\n    Password Change Page ->> User: Prompts for new Password\n    User --\x3e> Password Change Page: Enters New Password\n    Password Change Page --\x3e> User Database: Updates User Password\n    User Database --) Password Change Page: Confirms Update\n    deactivate User Database\n    Password Change Page --\x3e> User: Confirmation Message\n\n    Password Change Page --\x3e>- Login Page: Redirects to\n    Login Page --\x3e> User: Login Prompt\n\n    User ->> Login Page: Enters Credentials\n    Login Page --\x3e>- Account Page: Redirects to'}),(0,r.kt)("p",null,'If the user finds themselves in a position where they need to reset their password, they are able to do so by navigating to the login page, and selecting the "Trouble Loggin In?" button. This will redirect them to an account recovery page, which prompts them to enter their recovery credentials (Email and secret questioon). After the user enters their credentials, they will be checked against the information stored in the user database. Upon confirmation, the user will be redirected to a page which prompts for an updated password. Once the new password is entered, it is updated in the user database, and the user is again redirected to the login page. Here, the user is able to enter their newly reestablished credentials, and log in, taking them to the account page.'))}u.isMDXComponent=!0}}]);