# Generated Cmake Pico project file

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# Initialise pico_sdk from installed location
# (note this can come from environment, CMake cache etc)
set(PICO_SDK_PATH "path/to/pico/sdk")
set(PICO_BOARD pico_w CACHE STRING "Board type")

set(BTSTACK_ROOT ${PICO_SDK_PATH}/lib/btstack)

# Pull in Raspberry Pi Pico SDK (must be before project)
include(pico_sdk_import.cmake)

if (PICO_SDK_VERSION_STRING VERSION_LESS "1.4.0")
  message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.4.0 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

project(Server C CXX ASM)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

# Add executable. Default name is the project name, version 0.1

add_executable(Server 
    Server.c 
    ../seesaw/seesaw.c
    ../bh1750/bh1750.c
    )

pico_set_program_name(Server "Server")
pico_set_program_version(Server "0.1")

pico_enable_stdio_uart(Server 0)
pico_enable_stdio_usb(Server 1)

# Add the standard library to the build
target_link_libraries(Server
        pico_stdlib
        pico_btstack_ble
        pico_btstack_cyw43
        pico_cyw43_arch_none
        )

# Add the standard include files to the build
target_include_directories(Server PRIVATE
  ${CMAKE_CURRENT_LIST_DIR}
  ${CMAKE_CURRENT_LIST_DIR}/.. # for our common lwipopts or any other standard includes, if required
)

pico_btstack_make_gatt_header(Server PRIVATE "${CMAKE_CURRENT_LIST_DIR}/SCU.gatt")

# Add any user requested libraries
target_link_libraries(Server 
        hardware_i2c
        pico_cyw43_arch_none
        )

pico_add_extra_outputs(Server)

